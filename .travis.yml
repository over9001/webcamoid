language: cpp

cache:
  ccache: true
  timeout: 1000
  directories:
    - keystores

env:
  global:
    - QTVER=5.14.1
    - PPAQTVER=514
    - QTIFWVER=3.2.2
    - APPIMAGEVER=12
    - ARCH_ROOT_DATE=2020.04.01
    - ARCH_ROOT_URL=https://mirror.rackspace.com/archlinux
    - FFMPEG_VERSION=4.2.2
    - SDKVER=6200805
    - NDKVER=r21
    - ANDROID_BUILD_TOOLS_VERSION=29.0.3
    - GITHUB_HUBVER=2.14.2
    # BT_KEY
    - secure: "U/X4/0wXHNNwydT9LwVGUIkQipzeYX/uuqjevtiy/kLe+Hzo5aRUe7h0craA+6lhKPo0X5wgWoIiI4on2mxhUT3dKwbE8xG8ZXqrUYC2dFIhlv/EbM6jjxzqKDO0iqE8YNhy0UZld8B509R6C1LJskPxpHjPMF/2+mUERANOJv1a4W0VZduEKsinwjk7bfJM13YbkMO2vEnn/rnM8CZHBdn2FuwW7eD5iUWc8JsMS5vEs4jNNABRZcF62iYpz5zGs/tv5M7S65TOxrUqqW6spNdia00pKTAvfYe83g+DMJDMbDALeFCE5BYQ1j0++BQhQDaiSxvbntZkoUNaojV9A1QCHT0EPqHFDPZUB5rOIBibWq+bmPxJn5l67Wm9fYetrFSaeWLM8F1NjJnZtNT8uz0nApr3tskRCQOTGU04jaPwy7BEjY0V0uEPdo9lexQLDgS7VWyUkKtpFqD+CXZ9njLaH76yqfKB3wSiXFdpt0k0r849oXWKElCDFcFbJz69XqJfGtbvq5RYm9x7QM/3actkordbz7KOImlu5ncJtw2BlWSybng4JS6g8v3OUspBDdn1F9SnR70p84AVtPyP6HGz0LIiy/D5TRyE2aJ24+EZJ5+iEym8KdAqq0Lhg60Y95KMdm5Aybix4VW+OuR/3tjCtY7+UuGf72mxzWMoFS8="
    # GITHUB_TOKEN
    - secure: "Mttcf69zNcwl9Zuxu2Od5woHe/kCxIuKRmQTTqyfS84vMiq4lWaPA8PNx9vhu7aOrFsGwu158fUVA0+34klW3UNn2H1IBxIXH10gsAmZVnjUuN4jXvQd1kB682dAUrXb7OxEPHj5IhS4STwwYUcto1b+H1tsPr3XMH3fLXSUp2It7eHU10iNwS/J39kVyyOSnWq0g3LgdIeh22zYrAMGvlt7iOqJXgbtdvHel9xG4HSEB9I/QaGqSkO1q9GG2zz9+7rOMRzSQFP0ke2wKeE1NfyYMD9X2ont7gIKkcZx2jad4Sqw/AAw7HM75e5lgLtTfQ0B3QN3Luj20RWPSRJbQL7KNn1KWzrnip2Xe6KSNVvSk066JMkZnr7B3BGTzcoroRI6jsxxLTu9uSCfv6koVIROYcuoUdHKSyZnzR8egoaRXOFC88EnKvSZZTKYaKdQ9kWDUVh6jdXWv8Q5Kx6360CmcGw6mWDRZf6HBIzbeDbOTSzYW5NQrZ/sjN7c4GLySOJNmEpNLwBT9l9A82E4Wju0o74sCxcQ1CqH2xguhTGeEiFwQpOxqy093hEYb6wvArGhvycpgbK7a1vUT0vEoAQmUkamH6zczSckSz9gx4cME429KeTAS16iWB/vIUOgRwy5Ra6vkMn5zFP6iPTRLdiBAhPN+9F4fyHag30ZiIY="

matrix:
  include:
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ARCH_ROOT_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=x86_64
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=i686
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=x86_64
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=i686
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=debian:testing
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=debian:testing
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=fedora
      - DOCKERIMG=fedora:rawhide
      - FEDORAVER=rawhide
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=fedora
      - DOCKERIMG=fedora:rawhide
      - FEDORAVER=rawhide
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=opensuse
      - DOCKERIMG=opensuse/tumbleweed
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=opensuse
      - DOCKERIMG=opensuse/tumbleweed
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:bionic
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:bionic
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:eoan
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:eoan
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:focal
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:focal
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
      - DAILY_BUILD=1
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
      - RELEASE_BUILD=1
  - os: osx
    osx_image: xcode10.1
    compiler: clang
  - os: osx
    osx_image: xcode10.2
    compiler: clang
  - os: osx
    osx_image: xcode10.3
    compiler: clang
  - os: osx
    osx_image: xcode11
    compiler: clang
  - os: osx
    osx_image: xcode11.1
    compiler: clang
  - os: osx
    osx_image: xcode11.2
    compiler: clang
  - os: osx
    osx_image: xcode11.3
    compiler: clang
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=armeabi-v7a
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=arm64-v8a
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=x86
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=x86_64
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=armeabi-v7a:arm64-v8a:x86:x86_64
      - DAILY_BUILD=1

before_install: |
  if [ -z "${ANDROID_BUILD}" ]; then
    if [ "${TRAVIS_OS_NAME}" = linux ] && [ -z "${ARCH_ROOT_BUILD}" ]; then
      docker pull ${DOCKERIMG}
      docker ps -a
      docker run --privileged -it -d -v ${PWD}:/sources -v $HOME/.ccache:/ccache -e CCACHE_DIR=/ccache -w /sources --name ${DOCKERSYS} ${DOCKERIMG} /bin/sh
    fi
  fi

install:
  - chmod +x ports/ci/travis/install_deps.sh
  - ports/ci/travis/install_deps.sh

before_script: |
  if [ "${ANDROID_BUILD}" = 1 ]; then
    export COMPILESPEC=android-${COMPILER}
  elif [ "${ARCH_ROOT_BUILD}" = 1 ] && [ ! -z "${ARCH_ROOT_MINGW}" ]; then
    export CXX=${ARCH_ROOT_MINGW}-w64-mingw32-g++
    export COMPILESPEC=win32-g++
  elif [ "${TRAVIS_OS_NAME}" = linux ]; then
    if [ "${CXX}" = g++ ]; then
      export COMPILESPEC=linux-g++
    elif [ "${CXX}" = clang++ ]; then
      export COMPILESPEC=linux-clang
    fi
  elif [ "${TRAVIS_OS_NAME}" = osx ]; then
    brew link --force qt5
    if [ "${CXX}" = g++ ]; then
      export COMPILESPEC=macx-g++
    elif [ "${CXX}" = clang++ ]; then
      export COMPILESPEC=macx-clang
    fi
  fi

script:
  - chmod +x ports/ci/travis/build.sh
  - ports/ci/travis/build.sh

after_success:
  - chmod +x ports/ci/travis/deploy.sh
  - ports/ci/travis/deploy.sh
  - chmod +x ports/ci/travis/upload.sh
  - ports/ci/travis/upload.sh

branches:
  only:
    - master

notifications:
  recipients:
    - hipersayan.x@gmail.com
  email:
    on_success: change
    on_failure: change
